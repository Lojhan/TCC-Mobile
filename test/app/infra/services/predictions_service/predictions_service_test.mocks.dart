// Mocks generated by Mockito 5.3.0 from annotations
// in mobile/test/app/infra/services/predictions_service/predictions_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mobile/app/domain/entities/prediction.dart' as _i3;
import 'package:mobile/app/domain/entities/prediction_payload.dart' as _i8;
import 'package:mobile/app/infra/interfaces/datasources/i_predict_service.dart'
    as _i7;
import 'package:mobile/app/infra/interfaces/i_predictions_repository.dart'
    as _i4;
import 'package:mobile/errors/errors.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakePrediction_1 extends _i1.SmartFake implements _i3.Prediction {
  _FakePrediction_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [IPredictionsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPredictionsRepository extends _i1.Mock
    implements _i4.IPredictionsRepository {
  MockIPredictionsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i6.Failure, List<_i3.Prediction>>> listPredictions() =>
      (super.noSuchMethod(Invocation.method(#listPredictions, []),
          returnValue:
              _i5.Future<_i2.Either<_i6.Failure, List<_i3.Prediction>>>.value(
                  _FakeEither_0<_i6.Failure, List<_i3.Prediction>>(
                      this, Invocation.method(#listPredictions, [])))) as _i5
          .Future<_i2.Either<_i6.Failure, List<_i3.Prediction>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i3.Prediction>> getPrediction(
          {String? id}) =>
      (super.noSuchMethod(Invocation.method(#getPrediction, [], {#id: id}),
              returnValue:
                  _i5.Future<_i2.Either<_i6.Failure, _i3.Prediction>>.value(
                      _FakeEither_0<_i6.Failure, _i3.Prediction>(this,
                          Invocation.method(#getPrediction, [], {#id: id}))))
          as _i5.Future<_i2.Either<_i6.Failure, _i3.Prediction>>);
}

/// A class which mocks [IPredictDiseaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPredictDiseaseService extends _i1.Mock
    implements _i7.IPredictDiseaseService {
  MockIPredictDiseaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Prediction> call({_i8.PredictionPayload? payload}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#payload: payload}),
              returnValue: _i5.Future<_i3.Prediction>.value(_FakePrediction_1(
                  this, Invocation.method(#call, [], {#payload: payload}))))
          as _i5.Future<_i3.Prediction>);
}
